extends layout

block content
  div 
    h1 Date #{day}
    div.row
      div.boxer1
        p.title Rome
        p.date#rome #{time_rome} 
      div.boxer2  
        p.title NY
        p.date#ny #{time_ny}
    div.row 
    div.row.mt-20 
      div
        if( typeof(videos) != 'undefined' && videos.length > 0)
          each item in videos 
            <iframe width="999" id="iframe_#{item.name}" style="display:none" height="360" src="#{item.url}" title="#{item.name}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    div 
      h2.title Time left   
      .row 
        .boxer3
          span.date#desc_h 00
          span :
          span.date#desc_m 00       
          span :
          span.date#desc_s 00   
          
    div.row.mt-20
      .col 
        h2.title Set hh:mm
        <input type="time" id="time" name="time" value="00:01" min="00:00" max="23:99" required />
    .row 
      .col
        div.div_ul
          ul.list-video
            if(typeof(videos) != 'undefined' && videos.length > 0 )    
              each item in videos 
                li <input type="radio" name="url" value="#{item.name}" id="url_#{item.name}"> <label for="url_#{item.name}"> #{item.name} </label>      
    .row 
      .col 
        <button type="button" class="btn btn-xs btn-settimer" onclick="setTimer()">Save</button>      
  script.
    var timer_is_stop = true;

    document.addEventListener('DOMContentLoaded', event => {

          
      setInterval( () => {

        //region timer
        let date = new Date();
        document.getElementById('rome').innerText = date.toLocaleTimeString('it-IT');
        document.getElementById('ny').innerText = date.toLocaleTimeString('it-IT',  { timeZone:'America/New_York' });

        //endregion
          let seconds = parseInt(document.getElementById('desc_s').innerText)-1;
          let hours = parseInt(document.getElementById('desc_h').innerText);
          let minutes = parseInt(document.getElementById('desc_m').innerText);
          if(seconds < 0){
            seconds = 59;
          }

     
        //console.log("timer "+timer_is_stop);
        //region countdown
        if(timer_is_stop == false ){
                   
          document.getElementById('desc_s').innerText = (seconds < 10 ? '0':'')+seconds;
          if(hours == 0 && minutes == 0){
            //console.log("seconds "+seconds);
        
            if( seconds  == 16 ){
              //console.log("audioo");
              //set sound
              let sound = new Audio('audio/analog-timer-74998.mp3');
              sound.play();
            }else if( seconds == 10){
              addZoom();
            }else if( seconds == 0 ){
              timer_is_stop = true;
              document.title = 'Timer finish!!';
            }          
          }else{
            if(hours > 0 && minutes == 0 && seconds == 0){
                hours--;
                minutes = 59;
                document.getElementById('desc_h').innerText = ( hours < 10 ? '0' : '')+hours;
                document.getElementById('desc_m').innerText = minutes;
            }
          }
        }
        //endregion

        console.warn("s "+seconds);
        console.warn("m "+minutes);
        console.warn("h "+hours);

        
      },1000);

      setInterval( () => {
        if(document.getElementById('desc_m').innerText !== undefined && parseInt(document.getElementById('desc_m').innerText) !== NaN &&  document.getElementById('desc_m').innerText != '0'  ){
          let m = parseInt(document.getElementById('desc_m').innerText)-1;
          if(m < 0){
            m = 0;
          }
          document.getElementById('desc_m').innerText =  (m<10 ? '0' : '')+m;
        }
      },60000);

      setInterval( () => {
        //console.log("ora");
        if( document.getElementById('desc_h').innerText !== undefined && parseInt(document.getElementById('desc_h').innerText) !== NaN ){
            let h = parseInt(document.getElementById('desc_h').innerText)-1;
            if(h < 0){
              h = 0;
            }
            document.getElementById('desc_h').innerText = h;
        } 

      },3600000);
    });
    
    function setTimer(){
      removeZoom();

      document.title = 'Timer set';
      let timer = document.getElementById('time').value;
      let tmp  = timer.split(":");
      timer_is_stop = false;
      let h = parseInt(tmp[0]);
      if(h < 0 ){
          h=0;
      }
      let m = parseInt(tmp[1])-1;
      if(m <=0 && h > 0 ){
       m = 59;
       h--;
      }else if(m < 0){
        m = 0;
      }
      document.getElementById('desc_s').innerText=59;
      document.getElementById('desc_m').innerText=(m<10 ? '0' : '')+m;
      document.getElementById('desc_h').innerText=(h<10 ? '0' : '')+h;


      //region iframe
      let input_radios = document.getElementsByName('url');
      if(input_radios.length > 0){  
        for (let i = 0; i < input_radios.length; i++){
          //console.log("ok="+input_radios[i].value);
          if(input_radios[i].checked){
            document.getElementById('iframe_'+input_radios[i].value).style.display="block";
          }else{
            document.getElementById('iframe_'+input_radios[i].value).style.display="none";
          }
        }
      }
      
      //endregion
    }
    function removeZoom(){
     let tmp = document.getElementsByClassName('boxer3');
      let i = 0;
      for(i=0; i < tmp.length ; i++){
        tmp[i].className=" boxer3";
      }
    }
    function addZoom(){
      let tmp = document.getElementsByClassName('boxer3');
      let i = 0;
      for(i=0; i < tmp.length ; i++){
        tmp[i].className+=" zoom";
      }
    }
  block new_content  
